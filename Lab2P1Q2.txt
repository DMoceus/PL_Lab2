A)
expr   := term '+' expr | term
term   := factor | factor '*' term
factor := '(' expr ')' | number
number := digit | number digit
digit  := '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'

B)
* has precedence over + in this grammar because it appears further down in the rules.

C)
3 + ( 5 * 7 )
3 * ( 5 * 7 )

D)
expr
term '+' expr
factor '+' expr
number '+' expr
digit '+' expr
'3' '+' expr
'3' '+' term
'3' '+' factor '*' term
'3' '+' number '*' term
'3' '+' digit '*' term
'3' '+' '5' '*' term
'3' '+' '5' '*' factor
'3' '+' '5' '*' number
'3' '+' '5' '*' digit
'3' '+' '5' '*' '7'

expr
term
factor '*' term
number '*' term
digit '*' term
'3' '*' term
'3' '*' factor '*' term
'3' '*' number '*' term
'3' '*' digit '*' term
'3' '*' '5' '*' term
'3' '*' '5' '*' factor
'3' '*' '5' '*' number
'3' '*' '5' '*' digit
'3' '*' '5' '*' '7'
